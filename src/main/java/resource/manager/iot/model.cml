/* Example Context Map written with 'ContextMapper DSL' */
ContextMap InsuranceContextMap {
	type = SYSTEM_LANDSCAPE
	state = TO_BE
	/* Add bounded contexts to this context map: */
	contains RemoteMaintenanceContext
	contains AugmentedRealityMaintenanceContext
	contains LicenceManagerContext
	contains TicketingContext
	contains AuthenticationContext
	contains ConfigurationLibraryContext
	contains OptimizingToolContext
	contains TelemetryDataAcquisitionContext
	contains TelemetryDashboardContext
	contains ResourceManagerUIContext
	contains SparePartMarketplaceContext
	contains PredictiveMaintenanceContext
	contains DiagnosticContext
	contains MachineDataContext
	contains UserContext

	/* Define the context relationships: */
	TelemetryDataAcquisitionContext -> MachineDataContext {
		implementationTechnology = "MQTT"
	}

	ResourceManagerUIContext <- UserContext {
		implementationTechnology = "RESTfulHTTP"
	}

	UserContext <- AuthenticationContext {
		implementationTechnology = "RESTfulHTTP"
	}

	TelemetryDashboardContext -> ResourceManagerUIContext {
		implementationTechnology = "RESTfulHTTP"
	}

	SparePartMarketplaceContext -> ResourceManagerUIContext {
		implementationTechnology = "RESTfulHTTP"
	}

	TicketingContext <- MachineDataContext {
		implementationTechnology = "RESTfulHTTP"
	}

	TicketingContext -> ResourceManagerUIContext {
		implementationTechnology = "RESTfulHTTP"
	}

	ResourceManagerUIContext <- LicenceManagerContext {
		implementationTechnology = "RESTfulHTTP"
	}

	RemoteMaintenanceContext -> ResourceManagerUIContext {
		implementationTechnology = "RESTfulHTTP"
	}

	AugmentedRealityMaintenanceContext -> RemoteMaintenanceContext {
		implementationTechnology = "RESTfulHTTP"
	}

	PredictiveMaintenanceContext -> DiagnosticContext {
		implementationTechnology = "RESTfulHTTP"
	}

	DiagnosticContext -> ResourceManagerUIContext {
		implementationTechnology = "RESTfulHTTP"
	}

	OptimizingToolContext -> ResourceManagerUIContext {
		implementationTechnology = "RESTfulHTTP"
	}

	ConfigurationLibraryContext -> OptimizingToolContext {
		implementationTechnology = "RESTfulHTTP"
	}

	MachineDataContext -> TelemetryDashboardContext {
		implementationTechnology = "RESTfulHTTP"
	}

	MachineDataContext -> DiagnosticContext {
		implementationTechnology = "RESTfulHTTP"
	}

	MachineDataContext -> PredictiveMaintenanceContext {
		implementationTechnology = "RESTfulHTTP"
	}
}

/* Bounded Context Definitions */
BoundedContext RemoteMaintenanceContext implements RemoteMaintenanceDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context manages the remote connection to a machine"
	responsibilities = ""
	implementationTechnology = "C#, Apache Guacamole, OpenVPN"
	
}

BoundedContext AugmentedRealityMaintenanceContext implements RemoteMaintenanceDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context manages the remote connection to a machine allowing the use of augmented reality."
	responsibilities = ""
}

BoundedContext LicenceManagerContext implements LicenceManagerDomain {
	type = SYSTEM
	domainVisionStatement = "This bounded context is responsible of services' licences generation and their validity."
	responsibilities = ""
	implementationTechnology = "C#"
}

BoundedContext TicketingContext implements SupportTicketDomain {
	type = SYSTEM
	domainVisionStatement = "This bounded context manages the user's support request and generates support tickets."
	responsibilities = ""
	implementationTechnology = "C#"
}

BoundedContext AuthenticationContext implements UserDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context manages user's authentication and his role in the organization."
	responsibilities = ""
	implementationTechnology = "Azure Active Directory"
}

BoundedContext UserContext implements UserDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context manages all the information related to a user."
	responsibilities = ""
	implementationTechnology = "Azure Active Directory"
}

BoundedContext MachineDataContext implements MachineDomain {
	type = SYSTEM
	domainVisionStatement = "This bounded context manages all the tecnical and telemetry data related to a machine."
	responsibilities = ""
	implementationTechnology = "Azure Time Series Insights"
}

BoundedContext TelemetryDataAcquisitionContext implements MachineDomain {
	type = SYSTEM
	domainVisionStatement = "This bounded context is responsible of the data acquisition from a machine."
	responsibilities = ""
	implementationTechnology = "C#, OPC UA client, field gateway"
}

BoundedContext ConfigurationLibraryContext implements MachineOptimizationDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context helps the user by assisting him in the machine program configuration."
	responsibilities = ""
}

BoundedContext OptimizingToolContext implements MachineOptimizationDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context is responsible of the machine production optimization."
	responsibilities = ""
}


BoundedContext TelemetryDashboardContext implements UserInterfaceDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context is responsible of the telemetry data visualization to the user."
	responsibilities = ""
	implementationTechnology = "ReactJS, TSI client"
}

BoundedContext ResourceManagerUIContext implements UserInterfaceDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context represents the main user interface. It's the access point to the application and it's related to almost all the other bounded contexts."
	responsibilities = ""
	implementationTechnology = "ReactJS"
}

BoundedContext SparePartMarketplaceContext implements SparePartMarketplaceDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context manages the spare part orders from the users."
	responsibilities = ""
	implementationTechnology = "ReactJS, C#"
}

BoundedContext PredictiveMaintenanceContext implements DiagnosticDomain {
	type = SYSTEM
	domainVisionStatement = "This bounded context manages the predictive maintenance by analyzing the machine generated data."
	responsibilities = ""
}

BoundedContext DiagnosticContext implements DiagnosticDomain {
	type = APPLICATION
	domainVisionStatement = "This bounded context is responsible of the real time data analysis and anomaly detections."
	responsibilities = ""
}

/* Domain & Subdomain Definitions */
Domain ResourceManagerIoT {
	Subdomain RemoteMaintenanceDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain that manages everything user support related."
	}

	Subdomain UserDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain that manages everything user related."
	}

	Subdomain MachineDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain that manages everything machine related."
	}

	Subdomain UserInterfaceDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain that manages everything related to the user interface."
	}

	Subdomain DiagnosticDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain that manages everything related to machine diagnostic."
	}

	Subdomain SupportTicketDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain that manages everything related to customer support."
	}

	Subdomain LicenceManagerDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain that manages everything related to service's licence management."
	}

	Subdomain MachineOptimizationDomain {
		type = SUPPORTING_DOMAIN
		domainVisionStatement = "Subdomain that manages everything related to machine optimization."
	}

	Subdomain SparePartMarketplaceDomain {
		type = SUPPORTING_DOMAIN
		domainVisionStatement = "Subdomain that manages everything related to machine spare parts marketplace."
	}

}

